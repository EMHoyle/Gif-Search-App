{"version":3,"sources":["components/css/AddCategory.module.css","components/css/GridItem.module.css","components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","components/GifSearch.jsx","index.js","components/css/GifGrid.module.css","components/css/GifSearch.module.css"],"names":["module","exports","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","styles","input","type","value","onChange","target","placeholder","GifGridItem","title","url","card","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","container","GifSearch","divider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,MAAQ,6B,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,yB,uICqCVC,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,UAAWC,IAAOC,MAClBC,KAAK,OACLC,MAAOZ,EACPa,SAnBe,SAACV,GACpBF,EAAcE,EAAEW,OAAOF,QAmBnBG,YAAY,8B,yBCPLC,EAhBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,qBAAKV,UAAWC,IAAOU,KAAvB,SACE,sBAAKX,UAAU,kDAAf,UACE,qBAAKY,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,U,wBCVCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACT,wCACG,2CACTN,EAHe,UACT,wCADS,aAGEO,UAAUF,GAHZ,YAEN,4CAFM,SAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXjB,kBAedY,GAfc,4CAAH,sD,gBCgCLM,EAzBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECJN,SAACA,GAAc,IAAD,EACdxB,mBAAS,CACjC8B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPV,KAAMa,EACNL,SAAS,MAEV,UAEJ,CAACd,IAEGe,EDZ2BM,CAAarB,GAAjCW,EADkB,EACxBL,KAAcQ,EADU,EACVA,QAEtB,OACE,qCACE,oBAAI7B,UAAWC,IAAOQ,MAAtB,SAA8BM,IAC9B,sBAAKf,UAAWC,IAAOoC,UAAvB,UACGR,GACC,sBAAM7B,UAAU,mDAAhB,wBAKD0B,EAAOH,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,c,gBEIxBa,EAlBG,WAAO,IAAD,EACc/C,mBAAS,IADvB,mBACfQ,EADe,KACHT,EADG,KAGtB,OACE,gCACE,oBAAIU,UAAWC,IAAOQ,MAAtB,2BACA,cAAC,EAAD,CAAanB,cAAeA,IAC5B,oBAAIU,UAAWC,IAAOsC,UAEtB,6BACGxC,EAAWwB,KAAI,SAACR,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCb/ByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BzD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,QAAU,8B","file":"static/js/main.8cc2974a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"AddCategory_input__1tTbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"GridItem_card__eSHdL\"};","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport styles from '../components/css/AddCategory.module.css'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        className={styles.input}\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        placeholder='find your ideal gif...'\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport styles from '../components/css/GridItem.module.css'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <div className='animate__animated animate__fadeIn animate__slow'>\r\n        <img src={url} alt={title} />\r\n        <p>{title}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifs = async (category) => {\r\n  const uri = 'https://api.giphy.com/v1/gifs/search?'\r\n  const apiKey = 'api_key=d2EszDMgzgdeBrN7FV2MhGJNeViGFbTn'\r\n  const url = `${uri}q=${encodeURI(category)}&${apiKey}`\r\n  const resp = await fetch(url)\r\n  const { data } = await resp.json()\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    }\r\n  })\r\n\r\n  return gifs\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport GifGridItem from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport styles from '../components/css/GifGrid.module.css'\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category)\r\n\r\n  return (\r\n    <>\r\n      <h3 className={styles.title}>{category}</h3>\r\n      <div className={styles.container}>\r\n        {loading && (\r\n          <span className='animate__animated animate__flash animate__slower'>\r\n            Loading...\r\n          </span>\r\n        )}\r\n\r\n        {images.map((img) => {\r\n          return <GifGridItem key={img.id} {...img} />\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        })\r\n      }, 1000)\r\n    })\r\n  }, [category])\r\n\r\n  return state\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport AddCategory from './AddCategory'\r\nimport GifGrid from './GifGrid'\r\n\r\nimport styles from '../components/css/GifSearch.module.css'\r\n\r\nconst GifSearch = () => {\r\n  const [categories, setCategories] = useState([])\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.title}>GifSearch App</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr className={styles.divider} />\r\n\r\n      <ol>\r\n        {categories.map((category) => {\r\n          return <GifGrid key={category} category={category} />\r\n        })}\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifSearch\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GifSearch from './components/GifSearch'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifSearch />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GifGrid_container__1AZSV\",\"title\":\"GifGrid_title__1-uA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"GifSearch_title__1uI87\",\"divider\":\"GifSearch_divider__jughs\"};"],"sourceRoot":""}